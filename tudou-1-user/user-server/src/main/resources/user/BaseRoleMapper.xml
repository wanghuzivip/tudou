<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tudou.user.repository.BaseRoleMapper">
    <resultMap id="BaseResultMap" type="com.tudou.user.model.BaseRole">
        <id column="role_id" jdbcType="BIGINT" property="roleId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="orders" jdbcType="INTEGER" property="orders" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
    </resultMap>
    <resultMap id="BaseResultMap_Alias" type="com.tudou.user.model.BaseRole">
        <id column="base_role_role_id" jdbcType="BIGINT" property="roleId" />
        <result column="base_role_name" jdbcType="VARCHAR" property="name" />
        <result column="base_role_description" jdbcType="VARCHAR" property="description" />
        <result column="base_role_orders" jdbcType="INTEGER" property="orders" />
        <result column="base_role_create_time" jdbcType="BIGINT" property="createTime" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        `role_id`, `name`, `description`, `orders`, `create_time`
    </sql>
    <sql id="Base_Column_List_Alias">
        `base_role`.`role_id` as `base_role_role_id`, `base_role`.`name` as `base_role_name`, 
        `base_role`.`description` as `base_role_description`, `base_role`.`orders` as `base_role_orders`, 
        `base_role`.`create_time` as `base_role_create_time`
    </sql>
    <select id="selectByExample" parameterType="com.tudou.user.model.BaseRoleExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from `base_role`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from `base_role`
        where `role_id` = #{roleId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from `base_role`
        where `role_id` = #{roleId,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.tudou.user.model.BaseRoleExample">
        delete from `base_role`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insertSelective" keyColumn="role_id" keyProperty="roleId" parameterType="com.tudou.user.model.BaseRole" useGeneratedKeys="true">
        insert into `base_role`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                `role_id`,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="description != null">
                `description`,
            </if>
            <if test="orders != null">
                `orders`,
            </if>
            <if test="createTime != null">
                `create_time`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="orders != null">
                #{orders,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.tudou.user.model.BaseRoleExample" resultType="java.lang.Integer">
        select count(*) from `base_role`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update `base_role`
        <set>
            <if test="record.roleId != null">
                `role_id` = #{record.roleId,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                `name` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                `description` = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.orders != null">
                `orders` = #{record.orders,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                `create_time` = #{record.createTime,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.tudou.user.model.BaseRole">
        update `base_role`
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                `description` = #{description,jdbcType=VARCHAR},
            </if>
            <if test="orders != null">
                `orders` = #{orders,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime,jdbcType=BIGINT},
            </if>
        </set>
        where `role_id` = #{roleId,jdbcType=BIGINT}
    </update>
</mapper>