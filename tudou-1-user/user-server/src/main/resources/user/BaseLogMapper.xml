<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tudou.user.repository.BaseLogMapper">
    <resultMap id="BaseResultMap" type="com.tudou.user.model.BaseLog">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="user_id" jdbcType="BIGINT" property="userId" />
        <result column="start_time" jdbcType="BIGINT" property="startTime" />
        <result column="spend_time" jdbcType="INTEGER" property="spendTime" />
        <result column="url" jdbcType="VARCHAR" property="url" />
        <result column="method" jdbcType="VARCHAR" property="method" />
        <result column="user_agent" jdbcType="VARCHAR" property="userAgent" />
        <result column="ip" jdbcType="VARCHAR" property="ip" />
        <result column="permissions" jdbcType="VARCHAR" property="permissions" />
    </resultMap>
    <resultMap id="BaseResultMap_Alias" type="com.tudou.user.model.BaseLog">
        <id column="base_log_id" jdbcType="BIGINT" property="id" />
        <result column="base_log_description" jdbcType="VARCHAR" property="description" />
        <result column="base_log_user_name" jdbcType="VARCHAR" property="userName" />
        <result column="base_log_user_id" jdbcType="BIGINT" property="userId" />
        <result column="base_log_start_time" jdbcType="BIGINT" property="startTime" />
        <result column="base_log_spend_time" jdbcType="INTEGER" property="spendTime" />
        <result column="base_log_url" jdbcType="VARCHAR" property="url" />
        <result column="base_log_method" jdbcType="VARCHAR" property="method" />
        <result column="base_log_user_agent" jdbcType="VARCHAR" property="userAgent" />
        <result column="base_log_ip" jdbcType="VARCHAR" property="ip" />
        <result column="base_log_permissions" jdbcType="VARCHAR" property="permissions" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.tudou.user.model.BaseLog">
        <result column="parameter" jdbcType="LONGVARCHAR" property="parameter" />
    </resultMap>
    <resultMap extends="BaseResultMap_Alias" id="ResultMapWithBLOBs_Alias" type="com.tudou.user.model.BaseLog">
        <result column="base_log_parameter" jdbcType="LONGVARCHAR" property="parameter" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        `id`, `description`, `user_name`, `user_id`, `start_time`, `spend_time`, 
        `url`, `method`, `user_agent`, `ip`, `permissions`
    </sql>
    <sql id="Base_Column_List_Alias">
        `base_log`.`id` as `base_log_id`, `base_log`.`description` as `base_log_description`, 
        `base_log`.`user_name` as `base_log_user_name`, `base_log`.`user_id` as `base_log_user_id`, 
        `base_log`.`start_time` as `base_log_start_time`, `base_log`.`spend_time` as `base_log_spend_time`, 
        `base_log`.`url` as `base_log_url`, `base_log`.`method` as `base_log_method`, 
        `base_log`.`user_agent` as `base_log_user_agent`, `base_log`.`ip` as `base_log_ip`, 
        `base_log`.`permissions` as `base_log_permissions`
    </sql>
    <sql id="Blob_Column_List">
        `parameter`
    </sql>
    <sql id="Blob_Column_List_Alias">
        `base_log`.`parameter` as `base_log_parameter`
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.tudou.user.model.BaseLogExample" resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from `base_log`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.tudou.user.model.BaseLogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from `base_log`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select 
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from `base_log`
        where `id` = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from `base_log`
        where `id` = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.tudou.user.model.BaseLogExample">
        delete from `base_log`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tudou.user.model.BaseLog" useGeneratedKeys="true">
        insert into `base_log`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="description != null">
                `description`,
            </if>
            <if test="userName != null">
                `user_name`,
            </if>
            <if test="userId != null">
                `user_id`,
            </if>
            <if test="startTime != null">
                `start_time`,
            </if>
            <if test="spendTime != null">
                `spend_time`,
            </if>
            <if test="url != null">
                `url`,
            </if>
            <if test="method != null">
                `method`,
            </if>
            <if test="userAgent != null">
                `user_agent`,
            </if>
            <if test="ip != null">
                `ip`,
            </if>
            <if test="permissions != null">
                `permissions`,
            </if>
            <if test="parameter != null">
                `parameter`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=BIGINT},
            </if>
            <if test="spendTime != null">
                #{spendTime,jdbcType=INTEGER},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="method != null">
                #{method,jdbcType=VARCHAR},
            </if>
            <if test="userAgent != null">
                #{userAgent,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="permissions != null">
                #{permissions,jdbcType=VARCHAR},
            </if>
            <if test="parameter != null">
                #{parameter,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.tudou.user.model.BaseLogExample" resultType="java.lang.Integer">
        select count(*) from `base_log`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update `base_log`
        <set>
            <if test="record.id != null">
                `id` = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.description != null">
                `description` = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.userName != null">
                `user_name` = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                `user_id` = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.startTime != null">
                `start_time` = #{record.startTime,jdbcType=BIGINT},
            </if>
            <if test="record.spendTime != null">
                `spend_time` = #{record.spendTime,jdbcType=INTEGER},
            </if>
            <if test="record.url != null">
                `url` = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.method != null">
                `method` = #{record.method,jdbcType=VARCHAR},
            </if>
            <if test="record.userAgent != null">
                `user_agent` = #{record.userAgent,jdbcType=VARCHAR},
            </if>
            <if test="record.ip != null">
                `ip` = #{record.ip,jdbcType=VARCHAR},
            </if>
            <if test="record.permissions != null">
                `permissions` = #{record.permissions,jdbcType=VARCHAR},
            </if>
            <if test="record.parameter != null">
                `parameter` = #{record.parameter,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.tudou.user.model.BaseLog">
        update `base_log`
        <set>
            <if test="description != null">
                `description` = #{description,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                `user_name` = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                `user_id` = #{userId,jdbcType=BIGINT},
            </if>
            <if test="startTime != null">
                `start_time` = #{startTime,jdbcType=BIGINT},
            </if>
            <if test="spendTime != null">
                `spend_time` = #{spendTime,jdbcType=INTEGER},
            </if>
            <if test="url != null">
                `url` = #{url,jdbcType=VARCHAR},
            </if>
            <if test="method != null">
                `method` = #{method,jdbcType=VARCHAR},
            </if>
            <if test="userAgent != null">
                `user_agent` = #{userAgent,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                `ip` = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="permissions != null">
                `permissions` = #{permissions,jdbcType=VARCHAR},
            </if>
            <if test="parameter != null">
                `parameter` = #{parameter,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where `id` = #{id,jdbcType=BIGINT}
    </update>
</mapper>